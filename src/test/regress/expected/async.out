--
-- ASYNC
--
--Should work. Send a valid message via a valid channel name
SELECT pg_notify('notify_async1','sample message1');
 pg_notify 
-----------
 
(1 row)

SELECT pg_notify('notify_async1','sample_message1',true);
 pg_notify 
-----------
 
(1 row)

SELECT pg_notify('notify_async1','sample_message1',false);
 pg_notify 
-----------
 
(1 row)

SELECT pg_notify('notify_async1','');
 pg_notify 
-----------
 
(1 row)

SELECT pg_notify('notify_async1',NULL);
 pg_notify 
-----------
 
(1 row)

-- Should fail. Send a valid message via an invalid channel name
SELECT pg_notify('','sample message1');
ERROR:  channel name cannot be empty
SELECT pg_notify(NULL,'sample message1');
ERROR:  channel name cannot be empty
SELECT pg_notify('notify_async_channel_name_too_long______________________________','sample_message1');
ERROR:  channel name too long
--Should work. Valid NOTIFY/LISTEN/UNLISTEN commands
NOTIFY notify_async2;
NOTIFY (collapse off) notify_async2;
NOTIFY notify_async2, '';
NOTIFY (collapse on) notify_async2, '';
NOTIFY (collapse off) notify_async2, '';
LISTEN notify_async2;
UNLISTEN notify_async2;
UNLISTEN *;
-- Should fail. Invalid option syntax
NOTIFY (collapse maybe) notify_async2;
NOTIFY (wrong opt) notify_async2, 'test';
-- Should return zero while there are no pending notifications.
-- src/test/isolation/specs/async-notify.spec tests for actual usage.
SELECT pg_notification_queue_usage();
 pg_notification_queue_usage 
-----------------------------
                           0
(1 row)

